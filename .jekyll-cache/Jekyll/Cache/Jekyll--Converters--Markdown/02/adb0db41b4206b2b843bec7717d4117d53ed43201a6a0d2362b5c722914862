I"<ul>
  <li>
    <p>자바는 하이브리드 방식으로 Virtual machine이 바이트를 받아서 머신 코드로 바꾸고, Java Compiler는 바이트 코드(닷클래스 파일)을 만든다. 매번 해석하는 것이 아니라, 두 번째에서는 JIT(Just-in-time)이 아예 머신 코드로 컴파일한다.</p>
  </li>
  <li>
    <p>public static void main</p>
  </li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Hello</span> <span class="o">{</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span>
	<span class="o">{</span>
		<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Hello World!"</span><span class="o">);</span>
	<span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<ul>
  <li>
    <p>자바는 Class 이름과 파일 이름이 같아야 한다.</p>
  </li>
  <li>
    <p>JVM은 main을 찾아서 실행하고, start point이기에 static 키워드를 통해서 메모리가 있어야 최초 실행이 가능하다.</p>
  </li>
  <li>
    <p>간단한 입력 받기</p>
  </li>
</ul>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">java.util.Scanner</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Hello</span> <span class="o">{</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span>
	<span class="o">{</span>
		<span class="nc">Scanner</span> <span class="n">input</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Scanner</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">in</span><span class="o">);</span>
		
		<span class="kt">int</span> <span class="n">num1</span><span class="o">;</span>
		<span class="kt">int</span> <span class="n">num2</span><span class="o">;</span>
		<span class="kt">int</span> <span class="n">sum</span><span class="o">;</span>
		
		<span class="n">num1</span> <span class="o">=</span> <span class="n">input</span><span class="o">.</span><span class="na">nextInt</span><span class="o">();</span>
		<span class="n">num2</span> <span class="o">=</span> <span class="n">input</span><span class="o">.</span><span class="na">nextInt</span><span class="o">();</span>
		
		<span class="n">sum</span> <span class="o">=</span> <span class="n">num1</span> <span class="o">+</span> <span class="n">num2</span><span class="o">;</span>
		
		<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">sum</span><span class="o">);</span>
		
		<span class="n">input</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
	<span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<ul>
  <li>primitive 타입은 stack으로, reference 타입은 heap으로 간다.</li>
</ul>

:ET