I",<h1 id="1-disjoint-sets">1. Disjoint Sets</h1>

<ul>
  <li>단순 버전( find 시간 복잡도: O(n^2))</li>
</ul>

<p><img src="https://raw.githubusercontent.com/chunyunseo/ImageRepo/image/img/image-20210514025054908.png" alt="image-20210514025054908" /></p>

<div class="language-c highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">void</span> <span class="nf">unoin</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="p">,</span> <span class="kt">int</span> <span class="n">j</span><span class="p">)</span>
<span class="p">{</span>
	<span class="n">parent</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">j</span><span class="p">;</span>
<span class="p">}</span>
<span class="kt">int</span> <span class="nf">find</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="p">)</span>
<span class="p">{</span>
    <span class="k">for</span><span class="p">(;</span> <span class="n">parent</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">&gt;=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">=</span> <span class="n">parent</span><span class="p">[</span><span class="n">i</span><span class="p">]);</span>
    <span class="k">return</span> <span class="n">i</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<ul>
  <li>Weighted union: 2개면 -2 이런식으로 표기해서 크기를 표현할 수 있다. 낮은 트리가 높은 트리에 속하게 해서 Worst case를 방지할 수 있다. 시간복잡도는 O(m+nlogn)</li>
</ul>

<div class="language-c highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">void</span> <span class="nf">weighted</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="p">,</span> <span class="kt">int</span> <span class="n">j</span><span class="p">)</span>
<span class="p">{</span>
	<span class="kt">int</span> <span class="n">temp</span> <span class="o">=</span> <span class="n">parent</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">+</span> <span class="n">parent</span><span class="p">[</span><span class="n">j</span><span class="p">];</span>
    <span class="k">if</span><span class="p">(</span><span class="n">parent</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">&gt;</span> <span class="n">parent</span><span class="p">[</span><span class="n">j</span><span class="p">])</span>
    <span class="p">{</span>
        <span class="c1">//j를 루트로 하는 set</span>
        <span class="n">parent</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">j</span><span class="p">;</span>
        <span class="n">parent</span><span class="p">[</span><span class="n">j</span><span class="p">]</span> <span class="o">=</span> <span class="n">temp</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="k">else</span>
    <span class="p">{</span>
        <span class="c1">//i를 루트로 하는 set</span>
        <span class="n">parent</span><span class="p">[</span><span class="n">j</span><span class="p">]</span> <span class="o">=</span> <span class="n">i</span><span class="p">;</span>
        <span class="n">parent</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">temp</span><span class="p">;</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<ul>
  <li>경로 압축</li>
</ul>

<div class="language-c highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">int</span> <span class="nf">find</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="p">)</span>
<span class="p">{</span>
    <span class="k">if</span><span class="p">(</span><span class="n">i</span> <span class="o">==</span> <span class="n">parent</span><span class="p">[</span><span class="n">i</span><span class="p">])</span> <span class="k">return</span> <span class="n">i</span><span class="p">;</span>
    <span class="k">return</span> <span class="n">parent</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">find</span><span class="p">(</span><span class="n">parent</span><span class="p">[</span><span class="n">i</span><span class="p">]);</span>
<span class="p">}</span>
<span class="c1">//코테에 써먹을 수 있는 버전.</span>
</code></pre></div></div>

<div class="language-c highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">int</span> <span class="nf">find</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="p">)</span>
<span class="p">{</span>
	<span class="kt">int</span> <span class="n">root</span><span class="p">,</span> <span class="n">trail</span><span class="p">,</span> <span class="n">lead</span><span class="p">;</span>
    <span class="k">for</span><span class="p">(</span><span class="n">root</span> <span class="o">=</span> <span class="n">i</span><span class="p">;</span> <span class="n">parent</span><span class="p">[</span><span class="n">root</span><span class="p">]</span> <span class="o">&gt;=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">root</span> <span class="o">=</span> <span class="n">parent</span><span class="p">[</span><span class="n">root</span><span class="p">]);</span>
    
    <span class="k">for</span><span class="p">(</span><span class="n">trail</span> <span class="o">=</span> <span class="n">i</span><span class="p">;</span> <span class="n">trail</span> <span class="o">!=</span> <span class="n">root</span><span class="p">;</span> <span class="n">trail</span><span class="o">=</span><span class="n">lead</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">lead</span> <span class="o">=</span> <span class="n">parent</span><span class="p">[</span><span class="n">trail</span><span class="p">];</span>
        <span class="n">parent</span><span class="p">[</span><span class="n">trail</span><span class="p">]</span> <span class="o">=</span> <span class="n">root</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="n">root</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<h1 id="2-binary-tree의-개수">2. Binary tree의 개수</h1>

<ul>
  <li>구하는 공식이 존재함</li>
</ul>

<p><img src="https://raw.githubusercontent.com/chunyunseo/ImageRepo/image/img/image-20210514031140889.png" alt="image-20210514031140889" /></p>
:ET